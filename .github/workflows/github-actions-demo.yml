name: GitHub Actions Demo # GitHub 저장소의 "작업" 탭에 표시되는 워크플로의 이름
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀 # 워크플로에서 생성된 워크플로 실행의 이름으로, 저장소의 "작업" 탭에 있는 워크플로 실행 목록에 표시
on: [push] # 이 워크플로에 대한 트리거를 지정
jobs: # 워크플로 에서 실행되는 모든 작업을 그룹화
  Explore-GitHub-Actions: # job_id를 정의
    runs-on: ubuntu-latest # 작업이 실행되는 가상 머신 (사용가능한 가상머신 목록 : https://docs.github.com/ko/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners)
    steps: # 실행되는 모든 단계를 그룹화
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      # test
      - run: ls
      - run: pwd
      - run: cd $(pwd)/tfe_fdo

  Terraform-Deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: hashicorp/setup-terraform@v3 
      with:
        cli_config_credentials_hostname: 'app.terraform.io'         # 테라폼 hostname
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}   # GitHub Secrets - TF_API_TOKEN : 테라폼 API 토큰
        terraform_wrapper: true 
    - run: terraform init
    - run: ls ${{ github.action_path }}
    - run: pwd
    - run: cd $(pwd)/tfe_fdo
    - id: plan
      run: terraform plan -no-color
    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}
